(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(537),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([e.id,"* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n}\n\nheader {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\nmain {\n  display: flex;\n  height: calc(100vh - 80px);\n}\n\n.left,\n.right {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 50%;\n}\n\n.left-content,\n.right-content {\n  width: 95%;\n  height: 95%;\n  min-width: 250px;\n  min-height: 250px;\n  max-width: 600px;\n  max-height: 600px;\n}\n\n.player-info {\n  height: 10%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.cell {\n  border: 1px solid grey;\n}\n\n.board-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 90%;\n}\n\n.board {\n  aspect-ratio: 1;\n  height: min(45vw, 100%);\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  box-shadow: 0 0 4px black;\n}\n\n.hover {\n  background-color: dimgray;\n}\n\n.hit {\n  background-color: red;\n}\n\n.miss {\n  background-color: blue;\n}\n\n.ship {\n  background-color: darkslategray;\n}\n\n.ship.hover {\n  background-color: darkred;\n}\n\n.ship.hit {\n  background-color: red;\n}\n\nfooter {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;AACxB;;AAEA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,aAAa;EACb,0BAA0B;AAC5B;;AAEA;;EAEE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;EACZ,UAAU;AACZ;;AAEA;;EAEE,UAAU;EACV,WAAW;EACX,gBAAgB;EAChB,iBAAiB;EACjB,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,WAAW;AACb;;AAEA;EACE,eAAe;EACf,uBAAuB;EACvB,aAAa;EACb,sCAAsC;EACtC,mCAAmC;EACnC,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;AACd",sourcesContent:["* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n}\n\nheader {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\nmain {\n  display: flex;\n  height: calc(100vh - 80px);\n}\n\n.left,\n.right {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 50%;\n}\n\n.left-content,\n.right-content {\n  width: 95%;\n  height: 95%;\n  min-width: 250px;\n  min-height: 250px;\n  max-width: 600px;\n  max-height: 600px;\n}\n\n.player-info {\n  height: 10%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.cell {\n  border: 1px solid grey;\n}\n\n.board-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 90%;\n}\n\n.board {\n  aspect-ratio: 1;\n  height: min(45vw, 100%);\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  box-shadow: 0 0 4px black;\n}\n\n.hover {\n  background-color: dimgray;\n}\n\n.hit {\n  background-color: red;\n}\n\n.miss {\n  background-color: blue;\n}\n\n.ship {\n  background-color: darkslategray;\n}\n\n.ship.hover {\n  background-color: darkred;\n}\n\n.ship.hit {\n  background-color: red;\n}\n\nfooter {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([o]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},i=[],c=0;c<e.length;c++){var s=e[c],d=r.base?s[0]+r.base:s[0],l=o[d]||0,A="".concat(d," ").concat(l);o[d]=l+1;var h=n(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==h)t[h].references++,t[h].updater(p);else{var u=a(p,r);r.byIndex=c,t.splice(c,0,{identifier:A,updater:u,references:1})}i.push(A)}return i}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var c=n(o[i]);t[c].references--}for(var s=r(e,a),d=0;d<o.length;d++){var l=n(o[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}o=s}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e=n(379),t=n.n(e),r=n(795),a=n.n(r),o=n(569),i=n.n(o),c=n(565),s=n.n(c),d=n(216),l=n.n(d),A=n(589),h=n.n(A),p=n(426),u={};u.styleTagTransform=h(),u.setAttributes=s(),u.insert=i().bind(null,"head"),u.domAPI=a(),u.insertStyleElement=l(),t()(p.Z,u),p.Z&&p.Z.locals&&p.Z.locals;const f=e=>({length:e.length,coordinates:e,hitPositions:[],isSunk:!1,hit(e){this.hitPositions.push(e),this.checkSunkStatus()},checkSunkStatus(){this.hitPositions.length===this.coordinates.length&&(this.isSunk=!0)}}),m=()=>{const e=[],t=[],n=[];for(let e=0;e<10;e+=1){const n=[];for(let t=0;t<10;t+=1)n.push(`${e}-${t}`);t.push(n)}return{board:t,attacks:n,ships:e,placeShip:function(t,n){if(10-n.charAt(2)<t);else{let r=!1;const a=[],o=parseInt(n.charAt(0),10),i=parseInt(n.charAt(2),10);for(let e=0;e<t;e+=1)a.push(`${o}-${i+e}`);if(e.forEach((e=>{e.coordinates.some((e=>a.includes(e)))&&(r=!0)})),r);else{const t=f(a);e.push(t)}}},receiveAttack:function(t){if(n.indexOf(t)>=0)return"Can't attack same position more than once";let r=!1;return e.forEach((e=>{e.coordinates.forEach((n=>{n===t&&(e.hit(n),r=!0)}))})),n.push(t),r?"Hit":"Miss"},allShipsSunk:function(){let t=!0;return e.forEach((e=>{!1===e.isSunk&&(t=!1)})),t}}},g=[],y=e=>({name:e,board:m()}),b={player1Name:document.querySelector(".left-content>.player-info"),player1Board:document.querySelector(".left-content>.board-container>.board"),player2Name:document.querySelector(".right-content>.player-info"),player2Board:document.querySelector(".right-content>.board-container>.board")},E=e=>{e.board.ships.forEach((e=>{e.coordinates.forEach((e=>{b.player1Board.querySelector(`[data-coordinate='${e}']`).classList.add("ship")}))}))},B=e=>{g[1].board.receiveAttack(`${e.target.getAttribute("data-coordinate")}`);let t=!1;g[1].board.ships.forEach((n=>{n.coordinates.some((t=>t===`${e.target.getAttribute("data-coordinate")}`))&&(t=!0)})),t?e.target.classList.add("hit"):e.target.classList.add("miss"),g[1].board.allShipsSunk(),setTimeout((()=>{const e=(e=>{let t,n=!0;for(;n;)t=`${Math.floor(10*Math.random())}-${Math.floor(10*Math.random())}`,e.attacks.indexOf(t)<0&&(n=!1);return t})(g[0].board);g[0].board.receiveAttack(e),t=!1,g[0].board.ships.forEach((n=>{n.coordinates.some((t=>t===e))&&(t=!0)})),t?b.player1Board.querySelector(`[data-coordinate="${e}"]`).classList.add("hit"):b.player1Board.querySelector(`[data-coordinate="${e}"]`).classList.add("miss"),g[0].board.allShipsSunk()}),500)},v=e=>{switch(g[0].board.ships.length){default:return;case 0:g[0].board.placeShip(5,`${e.target.getAttribute("data-coordinate")}`),E(g[0]);break;case 1:g[0].board.placeShip(4,`${e.target.getAttribute("data-coordinate")}`),E(g[0]);break;case 2:case 3:g[0].board.placeShip(3,`${e.target.getAttribute("data-coordinate")}`),E(g[0]);break;case 4:g[0].board.placeShip(2,`${e.target.getAttribute("data-coordinate")}`),E(g[0])}b.player1Board.querySelectorAll(".cell").forEach((e=>e.classList.remove("hover"))),5===g[0].board.ships.length&&b.player1Board.removeEventListener("click",v)},C=e=>{const t=e.target.getAttribute("data-coordinate"),n=parseInt(t.charAt(0),10),r=parseInt(t.charAt(2),10);switch(g[0].board.ships.length){default:break;case 0:for(let e=r;e<Math.min(r+5,10);e+=1){const t=`${n}-${e}`;b.player1Board.querySelector(`[data-coordinate="${t}"]`).classList.add("hover")}break;case 1:for(let e=r;e<Math.min(r+4,10);e+=1){const t=`${n}-${e}`;b.player1Board.querySelector(`[data-coordinate="${t}"]`).classList.add("hover")}break;case 2:case 3:for(let e=r;e<Math.min(r+3,10);e+=1){const t=`${n}-${e}`;b.player1Board.querySelector(`[data-coordinate="${t}"]`).classList.add("hover")}break;case 4:for(let e=r;e<Math.min(r+2,10);e+=1){const t=`${n}-${e}`;b.player1Board.querySelector(`[data-coordinate="${t}"]`).classList.add("hover")}}},x=e=>{const t=e.target.getAttribute("data-coordinate"),n=parseInt(t.charAt(0),10),r=parseInt(t.charAt(2),10);switch(g[0].board.ships.length){default:break;case 0:for(let e=r;e<Math.min(r+5,10);e+=1){const t=`${n}-${e}`;b.player1Board.querySelector(`[data-coordinate="${t}"]`).classList.remove("hover")}break;case 1:for(let e=r;e<Math.min(r+4,10);e+=1){const t=`${n}-${e}`;b.player1Board.querySelector(`[data-coordinate="${t}"]`).classList.remove("hover")}break;case 2:case 3:for(let e=r;e<Math.min(r+3,10);e+=1){const t=`${n}-${e}`;b.player1Board.querySelector(`[data-coordinate="${t}"]`).classList.remove("hover")}break;case 4:for(let e=r;e<Math.min(r+2,10);e+=1){const t=`${n}-${e}`;b.player1Board.querySelector(`[data-coordinate="${t}"]`).classList.remove("hover")}}};(()=>{for(;g.length>0;)g.pop();const e=y("player1"),t=y("cpu");g.push(e,t),((e,t)=>{b.player1Name.textContent=e.name,b.player2Name.textContent=t.name,b.player1Board.replaceChildren(),b.player2Board.replaceChildren(),e.board.board.forEach((e=>{e.forEach((e=>{const t=document.createElement("div");t.classList.add("cell"),t.setAttribute("data-coordinate",e),b.player1Board.appendChild(t)}))})),t.board.board.forEach((e=>{e.forEach((e=>{const t=document.createElement("div");t.classList.add("cell"),t.setAttribute("data-coordinate",e),b.player2Board.appendChild(t)}))}))})(e,t);const n=[5,4,3,3,2];for(let e=0;e<n.length;e+=1)for(;t.board.ships.length<e+1;)t.board.placeShip(n[e],`${Math.floor(10*Math.random())}-${Math.floor(10*Math.random())}`);b.player1Board.addEventListener("click",v),b.player1Board.addEventListener("mouseover",C),b.player1Board.addEventListener("mouseout",x),b.player2Board.addEventListener("click",B)})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,