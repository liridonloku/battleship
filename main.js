(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(537),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([e.id,"* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n}\n\nheader {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  height: 40px;\n  font-size: 32px;\n  font-family: serif;\n}\n\n.info {\n  height: 80px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.info > p {\n  margin: 0;\n  padding: 0;\n}\n\nmain {\n  display: flex;\n  height: calc(100vh - 160px);\n}\n\n.left,\n.right {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 50%;\n}\n\n.left-content,\n.right-content {\n  width: 95%;\n  height: 95%;\n  min-width: 250px;\n  min-height: 250px;\n  max-width: 600px;\n  max-height: 600px;\n}\n\n.player-info {\n  height: 10%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.cell {\n  border: 1px solid lightgrey;\n}\n\n.board-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 90%;\n}\n\n.board {\n  aspect-ratio: 1;\n  height: min(45vw, 100%);\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  box-shadow: 0 0 4px darkslategray;\n}\n\n.hover {\n  background-color: dimgray;\n}\n\n.hit {\n  background-color: red;\n}\n\n.miss {\n  background-color: royalblue;\n}\n\n.ship {\n  background-color: darkslategray;\n}\n\n.ship.hover {\n  background-color: darkred;\n}\n\n.ship.hit {\n  background-color: red;\n}\n\nfooter {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.overlay {\n  scale: 0;\n  transform: scale(0);\n  z-index: 2;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100vw;\n  height: 100vh;\n}\n\n.overlay.visible {\n  scale: 1;\n  transform: scale(1);\n}\n\n.dialog-box {\n  padding: 10px;\n  background-color: white;\n  border-radius: 5px;\n  box-shadow: 0 0 5px black;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  height: 150px;\n  width: 300px;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;AACxB;;AAEA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,uBAAuB;EACvB,YAAY;EACZ,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,6BAA6B;EAC7B,mBAAmB;AACrB;;AAEA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,2BAA2B;AAC7B;;AAEA;;EAEE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;EACZ,UAAU;AACZ;;AAEA;;EAEE,UAAU;EACV,WAAW;EACX,gBAAgB;EAChB,iBAAiB;EACjB,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,WAAW;AACb;;AAEA;EACE,eAAe;EACf,uBAAuB;EACvB,aAAa;EACb,sCAAsC;EACtC,mCAAmC;EACnC,iCAAiC;AACnC;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,QAAQ;EACR,mBAAmB;EACnB,UAAU;EACV,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;EAClB,MAAM;EACN,SAAS;EACT,OAAO;EACP,QAAQ;EACR,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,QAAQ;EACR,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,kBAAkB;EAClB,yBAAyB;EACzB,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,mBAAmB;EACnB,aAAa;EACb,YAAY;AACd",sourcesContent:["* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n}\n\nheader {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  height: 40px;\n  font-size: 32px;\n  font-family: serif;\n}\n\n.info {\n  height: 80px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.info > p {\n  margin: 0;\n  padding: 0;\n}\n\nmain {\n  display: flex;\n  height: calc(100vh - 160px);\n}\n\n.left,\n.right {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 50%;\n}\n\n.left-content,\n.right-content {\n  width: 95%;\n  height: 95%;\n  min-width: 250px;\n  min-height: 250px;\n  max-width: 600px;\n  max-height: 600px;\n}\n\n.player-info {\n  height: 10%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.cell {\n  border: 1px solid lightgrey;\n}\n\n.board-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 90%;\n}\n\n.board {\n  aspect-ratio: 1;\n  height: min(45vw, 100%);\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  box-shadow: 0 0 4px darkslategray;\n}\n\n.hover {\n  background-color: dimgray;\n}\n\n.hit {\n  background-color: red;\n}\n\n.miss {\n  background-color: royalblue;\n}\n\n.ship {\n  background-color: darkslategray;\n}\n\n.ship.hover {\n  background-color: darkred;\n}\n\n.ship.hit {\n  background-color: red;\n}\n\nfooter {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.overlay {\n  scale: 0;\n  transform: scale(0);\n  z-index: 2;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100vw;\n  height: 100vh;\n}\n\n.overlay.visible {\n  scale: 1;\n  transform: scale(1);\n}\n\n.dialog-box {\n  padding: 10px;\n  background-color: white;\n  border-radius: 5px;\n  box-shadow: 0 0 5px black;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  height: 150px;\n  width: 300px;\n}\n"],sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var l=0;l<e.length;l++){var A=[].concat(e[l]);r&&i[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),n.push(A))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],s=0;s<e.length;s++){var c=e[s],l=r.base?c[0]+r.base:c[0],A=o[l]||0,d="".concat(l," ").concat(A);o[l]=A+1;var h=t(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==h)n[h].references++,n[h].updater(p);else{var u=a(p,r);r.byIndex=s,n.splice(s,0,{identifier:d,updater:u,references:1})}i.push(d)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=t(o[i]);n[s].references--}for(var c=r(e,a),l=0;l<o.length;l++){var A=t(o[l]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}o=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e=t(379),n=t.n(e),r=t(795),a=t.n(r),o=t(569),i=t.n(o),s=t(565),c=t.n(s),l=t(216),A=t.n(l),d=t(589),h=t.n(d),p=t(426),u={};u.styleTagTransform=h(),u.setAttributes=c(),u.insert=i().bind(null,"head"),u.domAPI=a(),u.insertStyleElement=A(),n()(p.Z,u),p.Z&&p.Z.locals&&p.Z.locals;const f=e=>({length:e.length,coordinates:e,hitPositions:[],isSunk:!1,hit(e){this.hitPositions.push(e),this.checkSunkStatus()},checkSunkStatus(){this.hitPositions.length===this.coordinates.length&&(this.isSunk=!0)}}),m=()=>{const e=[],n=[],t=[];for(let e=0;e<10;e+=1){const t=[];for(let n=0;n<10;n+=1)t.push(`${e}-${n}`);n.push(t)}return{board:n,attacks:t,ships:e,placeShip:function(n,t){if(10-t.charAt(2)<n);else{let r=!1;const a=[],o=parseInt(t.charAt(0),10),i=parseInt(t.charAt(2),10);for(let e=0;e<n;e+=1)a.push(`${o}-${i+e}`);if(e.forEach((e=>{e.coordinates.some((e=>a.includes(e)))&&(r=!0)})),r)return"Can't place ship on top of another ship";const s=f(a);e.push(s)}},receiveAttack:function(n){if(t.indexOf(n)>=0)return"Can't attack same position more than once";let r=!1;return e.forEach((e=>{e.coordinates.forEach((t=>{t===n&&(e.hit(t),r=!0)}))})),t.push(n),r?"Hit":"Miss"},allShipsSunk:function(){let n=!0;return e.forEach((e=>{!1===e.isSunk&&(n=!1)})),n}}},g=[],y=e=>({name:e,board:m(),lastHit:""}),E={player1Name:document.querySelector(".left-content>.player-info"),player1Board:document.querySelector(".left-content>.board-container>.board"),player2Name:document.querySelector(".right-content>.player-info"),player2Board:document.querySelector(".right-content>.board-container>.board"),instructions:document.querySelector(".instructions"),currentShip:document.querySelector(".current-ship"),overlay:document.querySelector(".overlay"),endMessage:document.querySelector(".end-message"),resetButton:document.getElementById("reset")},b=e=>{e.board.ships.forEach((e=>{e.coordinates.forEach((e=>{E.player1Board.querySelector(`[data-coordinate='${e}']`).classList.add("ship")}))}))},B=e=>{if(e.stopPropagation(),g[1].board.attacks.indexOf(`${e.target.getAttribute("data-coordinate")}`)>=0||e.target.classList.contains("board"))return;g[1].board.receiveAttack(`${e.target.getAttribute("data-coordinate")}`);let n=!1;if(g[1].board.ships.forEach((t=>{t.coordinates.some((n=>n===`${e.target.getAttribute("data-coordinate")}`))&&(n=!0)})),n?e.target.classList.add("hit"):e.target.classList.add("miss"),g[1].board.allShipsSunk())return E.endMessage.textContent="You Win! All enemy ships have sunk.",void E.overlay.classList.add("visible");setTimeout((()=>{const e=((e,n)=>{let t,r=!0;if(n){const r=parseInt(n.charAt(0),10),a=parseInt(n.charAt(2),10);let o=1;for(;o<=4;o+=1){const n=`${r}-${a-o}`,i=`${r}-${a+o}`;if(e.board.some((e=>e.indexOf(n)>-1))&&e.attacks.indexOf(n)<0)return t=n,t;if(e.board.some((e=>e.indexOf(i)>-1))&&e.attacks.indexOf(i)<0)return t=i,t}}for(;r;)t=`${Math.floor(10*Math.random())}-${Math.floor(10*Math.random())}`,e.attacks.indexOf(t)<0&&(r=!1);return t})(g[0].board,g[1].lastHit);g[0].board.receiveAttack(e),n=!1,g[0].board.ships.forEach((t=>{t.coordinates.some((n=>n===e))&&(n=!0)})),n?(E.player1Board.querySelector(`[data-coordinate="${e}"]`).classList.add("hit"),g[1].lastHit=e):E.player1Board.querySelector(`[data-coordinate="${e}"]`).classList.add("miss"),g[0].board.allShipsSunk()&&(E.endMessage.textContent="You Lose! All your ships have sunk.",E.overlay.classList.add("visible"))}),500)},C=e=>{switch(g[0].board.ships.length){default:return;case 0:g[0].board.placeShip(5,`${e.target.getAttribute("data-coordinate")}`),b(g[0]);break;case 1:g[0].board.placeShip(4,`${e.target.getAttribute("data-coordinate")}`),b(g[0]);break;case 2:case 3:g[0].board.placeShip(3,`${e.target.getAttribute("data-coordinate")}`),b(g[0]);break;case 4:g[0].board.placeShip(2,`${e.target.getAttribute("data-coordinate")}`),b(g[0])}E.player1Board.querySelectorAll(".cell").forEach((e=>e.classList.remove("hover"))),k(),5===g[0].board.ships.length&&(E.player1Board.removeEventListener("click",C),E.player2Board.addEventListener("click",B))},v=e=>{const n=e.target.getAttribute("data-coordinate"),t=parseInt(n.charAt(0),10),r=parseInt(n.charAt(2),10);switch(g[0].board.ships.length){default:break;case 0:for(let e=r;e<Math.min(r+5,10);e+=1){const n=`${t}-${e}`;E.player1Board.querySelector(`[data-coordinate="${n}"]`).classList.add("hover")}break;case 1:for(let e=r;e<Math.min(r+4,10);e+=1){const n=`${t}-${e}`;E.player1Board.querySelector(`[data-coordinate="${n}"]`).classList.add("hover")}break;case 2:case 3:for(let e=r;e<Math.min(r+3,10);e+=1){const n=`${t}-${e}`;E.player1Board.querySelector(`[data-coordinate="${n}"]`).classList.add("hover")}break;case 4:for(let e=r;e<Math.min(r+2,10);e+=1){const n=`${t}-${e}`;E.player1Board.querySelector(`[data-coordinate="${n}"]`).classList.add("hover")}}},x=e=>{const n=e.target.getAttribute("data-coordinate"),t=parseInt(n.charAt(0),10),r=parseInt(n.charAt(2),10);switch(g[0].board.ships.length){default:break;case 0:for(let e=r;e<Math.min(r+5,10);e+=1){const n=`${t}-${e}`;E.player1Board.querySelector(`[data-coordinate="${n}"]`).classList.remove("hover")}break;case 1:for(let e=r;e<Math.min(r+4,10);e+=1){const n=`${t}-${e}`;E.player1Board.querySelector(`[data-coordinate="${n}"]`).classList.remove("hover")}break;case 2:case 3:for(let e=r;e<Math.min(r+3,10);e+=1){const n=`${t}-${e}`;E.player1Board.querySelector(`[data-coordinate="${n}"]`).classList.remove("hover")}break;case 4:for(let e=r;e<Math.min(r+2,10);e+=1){const n=`${t}-${e}`;E.player1Board.querySelector(`[data-coordinate="${n}"]`).classList.remove("hover")}}},k=()=>{switch(g[0].board.ships.length){default:break;case 0:E.instructions.textContent="Welcome to Battleship! Place your ships on your board by clicking a cell.",E.currentShip.textContent="Current Ship: Carrier (length: 5)";break;case 1:E.currentShip.textContent="Current Ship: Battleship (length: 4)";break;case 2:E.currentShip.textContent="Current Ship: Destroyer (length: 3)";break;case 3:E.currentShip.textContent="Current Ship: Submarine (length: 3)";break;case 4:E.currentShip.textContent="Current Ship: Patrol Boat (length: 2)";break;case 5:E.currentShip.textContent="",E.instructions.textContent="Attack the enemy board by clicking on their cells"}};E.resetButton.addEventListener("click",(()=>{E.overlay.classList.remove("visible"),E.endMessage.textContent="",S(),k()}));const S=()=>{for(;g.length>0;)g.pop();const e=y("Player"),n=y("Cpu");g.push(e,n),((e,n)=>{E.player1Name.textContent=e.name,E.player2Name.textContent=n.name,E.player1Board.replaceChildren(),E.player2Board.replaceChildren(),e.board.board.forEach((e=>{e.forEach((e=>{const n=document.createElement("div");n.classList.add("cell"),n.setAttribute("data-coordinate",e),E.player1Board.appendChild(n)}))})),n.board.board.forEach((e=>{e.forEach((e=>{const n=document.createElement("div");n.classList.add("cell"),n.setAttribute("data-coordinate",e),E.player2Board.appendChild(n)}))}))})(e,n);const t=[5,4,3,3,2];for(let e=0;e<t.length;e+=1)for(;n.board.ships.length<e+1;)n.board.placeShip(t[e],`${Math.floor(10*Math.random())}-${Math.floor(10*Math.random())}`);E.player1Board.addEventListener("click",C),E.player1Board.addEventListener("mouseover",v),E.player1Board.addEventListener("mouseout",x)};S()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,